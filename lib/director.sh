set_director_config () {
  login_ops_manager
  SSH_PRIVATE_KEY=`cat ${SSH_PEM_PATH} | perl -pe 's#\n#\x5c\x5c\x6e#g' | perl -ne '/(-----BEGIN RSA PRIVATE KEY-----[\s\S]*-----END RSA PRIVATE KEY-----)/m && print $1;'`

  CONFIG_JSON=`export PCF_ACCESS_KEY_ID PCF_SECRET_ACCESS_KEY VPC_ID PCF_SECURITY_GROUP_ID BOSH_KEY_PAIR REGION OPS_MANAGER_BUCKET SSH_PRIVATE_KEY PCF_RDS_HOST PCF_RDS_PORT PCF_RDS_USER PCF_RDS_DATABASE; envsubst < api-calls/director/config.json ; unset PCF_ACCESS_KEY_ID PCF_SECRET_ACCESS_KEY VPC_ID PCF_SECURITY_GROUP_ID BOSH_KEY_PAIR REGION OPS_MANAGER_BUCKET SSH_PRIVATE_KEY PCF_RDS_HOST PCF_RDS_PORT PCF_RDS_USER PCF_RDS_DATABASE`
  curl -qsLf --insecure -X PUT "${OPS_MANAGER_API_ENDPOINT}/staged/director/properties" -H "Authorization: Bearer ${UAA_ACCESS_TOKEN}" -H "Content-Type: application/json" -d "${CONFIG_JSON}"
}

get_director_config () {
  login_ops_manager
  curl -qsLf --insecure "${OPS_MANAGER_API_ENDPOINT}/staged/director/properties" -H "Authorization: Bearer ${UAA_ACCESS_TOKEN}" -H "Accepts: application/json"
}

set_availability_zones () {
  login_ops_manager
  AZS_JSON=`export PRIVATE_SUBNET_AVAIALBILITY_ZONE PRIVATE_SUBNET_2_AVAIALBILITY_ZONE; envsubst < api-calls/director/availability-zones.json; unset  PRIVATE_SUBNET_AVAIALBILITY_ZONE PRIVATE_SUBNET_2_AVAIALBILITY_ZONE`
  curl -qsLf --insecure -X PUT "${OPS_MANAGER_API_ENDPOINT}/staged/director/availability_zones" -H "Authorization: Bearer ${UAA_ACCESS_TOKEN}" -H "Content-Type: application/json" -d "${AZS_JSON}"
}

create_director_networks () {
  login_ops_manager
  NETWORKS_JSON=`export DIRECTOR_NETWORK_NAME PRIVATE_SUBNET_ID PRIVATE_SUBNET_CIDR PRIVATE_SUBNET_RESERVED_IP_RANGE DNS_SERVERS PRIVATE_SUBNET_GATEWAY PRIVATE_SUBNET_2_ID PRIVATE_SUBNET_2_CIDR PRIVATE_SUBNET_2_RESERVED_IP_RANGE DNS_SERVERS PRIVATE_SUBNET_2_GATEWAY SERVICES_NETWORK_NAME SERVICES_SUBNET_ID_1 SERVICES_CIDR_AZ_1 PRIVATE_SUBNET_RESERVED_IP_RANGE SERVICES_SUBNET_GATEWAY SERVICES_SUBNET_ID_2 SERVICES_CIDR_AZ_2 PRIVATE_SUBNET_2_RESERVED_IP_RANGE PRIVATE_SUBNET_2_GATEWAY; envsubst < api-calls/director/create-networks.json; unset DIRECTOR_NETWORK_NAME PRIVATE_SUBNET_ID PRIVATE_SUBNET_CIDR PRIVATE_SUBNET_RESERVED_IP_RANGE DNS_SERVERS PRIVATE_SUBNET_GATEWAY PRIVATE_SUBNET_2_ID PRIVATE_SUBNET_2_CIDR PRIVATE_SUBNET_2_RESERVED_IP_RANGE DNS_SERVERS PRIVATE_SUBNET_2_GATEWAY SERVICES_NETWORK_NAME SERVICES_SUBNET_ID_1 SERVICES_CIDR_AZ_1 PRIVATE_SUBNET_RESERVED_IP_RANGE SERVICES_SUBNET_GATEWAY SERVICES_SUBNET_ID_2 SERVICES_CIDR_AZ_2 PRIVATE_SUBNET_2_RESERVED_IP_RANGE PRIVATE_SUBNET_2_GATEWAY`
  curl --insecure -X PUT "${OPS_MANAGER_API_ENDPOINT}/staged/director/networks" -H "Authorization: Bearer ${UAA_ACCESS_TOKEN}" -H "Content-Type: application/json" -d "${NETWORKS_JSON}"
}

assign_director_networks () {
  login_ops_manager
  NETWORKS_JSON=`export DIRECTOR_NETWORK_NAME PRIVATE_SUBNET_AVAIALBILITY_ZONE ; envsubst < api-calls/director/assign-networks.json; unset DIRECTOR_NETWORK_NAME PRIVATE_SUBNET_AVAIALBILITY_ZONE`
  curl --insecure -X PUT "${OPS_MANAGER_API_ENDPOINT}/staged/director/network_and_az" -H "Authorization: Bearer ${UAA_ACCESS_TOKEN}" -H "Content-Type: application/json" -d "${NETWORKS_JSON}"
}
